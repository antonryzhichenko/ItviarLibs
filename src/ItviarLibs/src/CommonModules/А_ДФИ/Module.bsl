//////////////////////////////////////////////////////////////////////////////////
//
//	Модуль Динамического Формирования Интерфейса
//	Начало разработки 29.03.2025 года
//	
//	Автор и разработчик: Рыжиченко Антон Иванович
//	Сайт компании: https://itviar.ru
//	https://github.com/antonryzhichenko/ItviarLibs
//	Инфостарт https://infostart.ru/
//	telegram: @TonyRyz
//	
//	Идея создания модуля это собрать воедино накопленный опыт и использовать его в дальнешем
//	В модуле есть заимствования процедур и функций из одноименного проекта Котова Дмитрия Вадимовича
//	
//////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция - Создать поле реквизита объекта
//
// Параметры:
//  Форма		 	- ФормаКлиентскогоПриложения - форма на которой создаются элементы
//  ИмяРеквизита	- Строка - Имя реквизита объекта метаданных
//  Тип				- ОписаниеТипов - Тип данных добавляемого реквизита
//  Родитель -		- Строка - достаточно указать название элемента формы в качестве родителя
//  				- ФормаКлиентскогоПриложения, ГруппаФормы - форма  или группа формы в качестве родителя
//  				- Массив Из Строка - будет выбран первый найденый по имени в Форма.Элементы
//  ЭлементПеред 	- Строка - достаточно указать название элемента формы, стоящего после добавляемого поля
//  				- ГруппаФормы, ПолеФормы - группа или поле формы
//  				- Массив Из Строка - будет выбран первый найденый по имени в Форма.Элементы 				
//  Заголовок		- Строка - имя заголовка поля формы
// 
// Возвращаемое значение:
//  ПолеФормы - Созданный элемент на форме
//
Функция ДобавитьРеквизитИПолеФормы(Форма, ИмяРеквизита, Тип, Родитель = Неопределено, ЭлементПеред = Неопределено, Заголовок = Неопределено) Экспорт

	Если Заголовок = Неопределено Тогда
		Заголовок = ДобавитьПробелПередВерхнимРегистром(ИмяРеквизита);
	КонецЕсли;

	ДобавитьРеквизитФормы(Форма, ИмяРеквизита, Тип);

	Поле = ДобавитьЭлементФормы(Форма, ИмяРеквизита, Тип("ПолеФормы"), Родитель, ЭлементПеред);
	Поле.Вид 			= ВидПоляФормы.ПолеВвода;
	Поле.Заголовок		= Заголовок;
	Поле.ПутьКДанным	= ИмяРеквизита;
	
	Возврат Поле;
	
КонецФункции

// Функция - Создать поле реквизита объекта
//
// Параметры:
//  Форма		 	- ФормаКлиентскогоПриложения - форма на которой создаются элементы
//  ИмяРеквизита	- Строка - Имя реквизита объекта метаданных
//  Родитель -		- Строка - достаточно указать название элемента формы в качестве родителя
//  				- ФормаКлиентскогоПриложения, ГруппаФормы - форма  или группа формы в качестве родителя
//  				- Массив Из Строка - будет выбран первый найденый по имени в Форма.Элементы
//  ЭлементПеред 	- Строка - достаточно указать название элемента формы, стоящего после добавляемого поля
//  				- ГруппаФормы, ПолеФормы - группа или поле формы
//  				- Массив Из Строка - будет выбран первый найденый по имени в Форма.Элементы				
//  Заголовок		- Строка - имя заголовока поля формы
// 
// Возвращаемое значение:
//  ПолеФормы - Созданный элемент на форме
//
Функция ДобавитьПолеРеквизитаОбъекта(Форма, ИмяРеквизита, Родитель = Неопределено, ЭлементПеред = Неопределено, Заголовок = Неопределено) Экспорт

	МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипЗнч(Форма.Объект.Ссылка));
	МетаданныеРеквизита = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита);
	
	Если Заголовок = Неопределено Тогда
		Заголовок = МетаданныеРеквизита.Синоним;
	КонецЕсли;	

	Поле = ДобавитьЭлементФормы(Форма, ИмяРеквизита, Тип("ПолеФормы"), Родитель, ЭлементПеред);
	
	Поле.Вид 			= ВидПоляФормы.ПолеВвода;
	Поле.Заголовок 		= Заголовок;
	Поле.ПутьКДанным 	= "Объект." + ИмяРеквизита;
	
	Возврат Поле;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДобавитьРеквизитФормы(Форма, ИмяРеквизита, Тип, Путь = Неопределено, Заголовок = Неопределено, СохраняемыеДанные = Ложь) Экспорт
	
	ДобавляемыеРеквизиты = Новый Массив;
	Реквизит = Новый РеквизитФормы(ИмяРеквизита, Тип, Путь, Заголовок, СохраняемыеДанные);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);	
	
	Возврат Реквизит;
	
КонецФункции

Функция ДобавитьЭлементФормы(Форма, ИмяЭлемента, ТипЭлемента, Родитель = Неопределено, ЭлементПеред = Неопределено) Экспорт
	
	Элементы = Форма.Элементы;
	
	Родитель = ЭлементФормы(Родитель, Форма);
	ЭлементПеред = ЭлементФормы(ЭлементПеред);	
	
	ИмяЭлемента = ОчиститьОтЗапрещенныхСимволов(ИмяЭлемента);
	
	Если ЭлементПеред = Неопределено Тогда
		Элемент = Элементы.Добавить(ИмяЭлемента, ТипЭлемента, Родитель);
	Иначе
		Элемент = Элементы.Вставить(ИмяЭлемента, ТипЭлемента, Родитель, ЭлементПеред);
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

Функция ЭлементФормы(Элемент, ЭлементПоУмолчанию = Неопределено) Экспорт
	
	Если Элемент = Неопределено Тогда
		Возврат ЭлементПоУмолчанию;
	КонецЕсли;
	
	ЭлементФормы = Неопределено;
	
	Если ТипЗнч(Элемент) = Тип("ПолеФормы") ИЛИ ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
		ЭлементФормы = Элемент;
	Иначе
		
		ВызватьИсключение("А_ДФИ.ЭлементФормы тут проблемы");
		
	КонецЕсли;
	
	Возврат ЭлементФормы;
	
КонецФункции

Функция СтрокаРазделитель() 
	
	Возврат ",";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция - Очистить от запрещенных символов
//
// Параметры:
//  ПроверяемаяСтрока		 - Строка - Имя элемента
//  ДопРазрешенныеСимволы	 - Строка - Дополнительно разрешенные символы
// 
// Возвращаемое значение:
//  Строка - Имя элемента очищенное от запрещенных символов
//
Функция ОчиститьОтЗапрещенныхСимволов(ПроверяемаяСтрока, ДопРазрешенныеСимволы = Неопределено)
	
	Если НЕ ЗначениеЗаполнено(ПроверяемаяСтрока) Тогда
		Возврат ПроверяемаяСтрока;
	КонецЕсли;
	
	ОчищеннаяСтрока = "";
	
	РазрешенныеСимволы = "абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ" +
						 "abcdefghijklmnopqrstuvwxyzQWERTYUIOPASDFGHJKLZXCVBNM" + 
						 "0123456789_";
	
	Если ЗначениеЗаполнено(ДопРазрешенныеСимволы) Тогда
		РазрешенныеСимволы = РазрешенныеСимволы + ДопРазрешенныеСимволы;
	КонецЕсли;
	
	Для Сч = 1 по СтрДлина(СокрЛП(ПроверяемаяСтрока)) Цикл
		ТекСимв = Сред(ПроверяемаяСтрока, Сч, 1);
		
		Если СтрНайти(РазрешенныеСимволы, ТекСимв) > 0 Тогда
			ОчищеннаяСтрока = ОчищеннаяСтрока + ТекСимв;
		КонецЕсли;
		
	КонецЦикла;

	Возврат ОчищеннаяСтрока;

КонецФункции

Функция ДобавитьПробелПередВерхнимРегистром(Строка)
	
	Результат = "";
	
	Для Сч = 1 По Стрдлина(Строка) Цикл
		
		Символ = Сред(Строка, Сч, 1);
		Если Символ = ВРег(Символ) Тогда
			Результат = Результат + " " + Символ;
		Иначе
			Результат = Результат + Символ;
		КонецЕсли;
		
	КонецЦикла;
	
	Результат = СокрЛП(Результат);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти